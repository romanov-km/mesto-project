(()=>{"use strict";var __webpack_modules__={146:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  h: () => (/* binding */ handleClickDelete)\n});\n\n// UNUSED EXPORTS: default\n\n;// CONCATENATED MODULE: ./src/components/validate.js\nvar showInputError = function showInputError(formElement, inputElement, errorMessage, settings) {\n  var errorElement = formElement.querySelector(\".\".concat(inputElement.id, \"-error\"));\n  inputElement.classList.add(settings.inputErrorClass);\n  errorElement.textContent = errorMessage;\n  errorElement.classList.add(settings.errorClass);\n};\nvar hideInputError = function hideInputError(formElement, inputElement, settings) {\n  var errorElement = formElement.querySelector(\".\".concat(inputElement.id, \"-error\"));\n  inputElement.classList.remove(settings.inputErrorClass);\n  errorElement.classList.remove(settings.errorClass);\n  errorElement.textContent = '';\n};\nvar isValid = function isValid(formElement, inputElement, settings) {\n  if (inputElement.validity.patternMismatch) {\n    // встроенный метод setCustomValidity принимает на вход строку\n    // и заменяет ею стандартное сообщение об ошибке\n    inputElement.setCustomValidity(inputElement.dataset.errorMessage);\n  } else {\n    // если передать пустую строку, то будут доступны\n    // стандартные браузерные сообщения\n    inputElement.setCustomValidity('');\n  }\n  if (!inputElement.validity.valid) {\n    // третьим аргументом мы передаём сообщение об ошибке,\n    // которое получаем из validationMessage\n    // теперь, если ошибка вызвана регулярным выражением,\n    // переменная validationMessage хранит наше кастомное сообщение\n    showInputError(formElement, inputElement, inputElement.validationMessage, settings);\n  } else {\n    hideInputError(formElement, inputElement, settings);\n  }\n};\nvar setEventListeners = function setEventListeners(formElement, settings) {\n  // Находим все поля внутри формы,\n  // сделаем из них массив методом Array.from\n  var inputList = Array.from(formElement.querySelectorAll(settings.inputSelector));\n  // найдем кнопочку\n  var buttonElement = formElement.querySelector(settings.submitButtonSelector);\n  toggleButtonState(inputList, buttonElement, settings);\n  // Обойдём все элементы полученной коллекции\n  inputList.forEach(function (inputElement) {\n    // каждому полю добавим обработчик события input\n    inputElement.addEventListener('input', function () {\n      // Внутри колбэка вызовем isValid,\n      // передав ей форму и проверяемый элемент\n      isValid(formElement, inputElement, settings);\n      toggleButtonState(inputList, buttonElement, settings);\n    });\n  });\n};\nvar validate_enableValidation = function enableValidation(settings) {\n  // Найдём все формы с указанным классом в DOM,\n  // сделаем из них массив методом Array.from\n  var formList = Array.from(document.querySelectorAll(settings.formSelector));\n  // Переберём полученную коллекцию\n  formList.forEach(function (formElement) {\n    formElement.addEventListener('submit', function (evt) {\n      evt.preventDefault();\n    });\n    // Для каждой формы вызовем функцию setEventListeners,\n    // передав ей элемент формы\n    setEventListeners(formElement, settings);\n  });\n};\nvar hasInvalidInput = function hasInvalidInput(inputList) {\n  return inputList.some(function (inputElement) {\n    return !inputElement.validity.valid;\n  });\n};\n\n//функция активирования кнопки\nvar toggleButtonState = function toggleButtonState(inputList, buttonElement, settings) {\n  if (hasInvalidInput(inputList)) {\n    buttonElement.disabled = true;\n    buttonElement.classList.add(settings.inactiveButtonClass);\n  } else {\n    buttonElement.disabled = false;\n    buttonElement.classList.remove(settings.inactiveButtonClass);\n  }\n};\nvar makeButtonDisabled = function makeButtonDisabled(buttonElement, settings) {\n  buttonElement.disabled = true;\n  buttonElement.classList.add(settings.inactiveButtonClass);\n};\nvar clearErrors = function clearErrors(formElement, settings) {\n  var inputElements = formElement.querySelectorAll(settings.inputSelector); // Выбираем все поля ввода внутри формы\n  // Проверяем каждое поле ввода и стираем ошибки\n  inputElements.forEach(function (inputElement) {\n    hideInputError(formElement, inputElement, settings);\n  });\n};\n\n;// CONCATENATED MODULE: ./src/components/utils.js\nvar initialCards = [{\n  name: 'Архыз',\n  link: 'https://pictures.s3.yandex.net/frontend-developer/cards-compressed/arkhyz.jpg'\n}, {\n  name: 'Челябинская область',\n  link: 'https://pictures.s3.yandex.net/frontend-developer/cards-compressed/chelyabinsk-oblast.jpg'\n}, {\n  name: 'Иваново',\n  link: 'https://pictures.s3.yandex.net/frontend-developer/cards-compressed/ivanovo.jpg'\n}, {\n  name: 'Камчатка',\n  link: 'https://pictures.s3.yandex.net/frontend-developer/cards-compressed/kamchatka.jpg'\n}, {\n  name: 'Холмогорский район',\n  link: 'https://pictures.s3.yandex.net/frontend-developer/cards-compressed/kholmogorsky-rayon.jpg'\n}, {\n  name: 'Байкал',\n  link: 'https://pictures.s3.yandex.net/frontend-developer/cards-compressed/baikal.jpg'\n}];\n\n//выбираем контейнер куда будут вставляться карточки\nvar containerCards = document.querySelector('.elements__list');\nvar popupCardImgFullSize = document.querySelector('.img-popup');\nvar inputUrlFormAddCard = document.querySelector('#form-add-card input[name=\"url\"]');\nvar inputNameFormAddCard = document.querySelector('#form-add-card input[name=\"name\"]');\nvar popupCardAddForm = document.querySelector('.add-popup');\nvar urlValueImg = document.querySelector('.img-popup__image');\nvar textValueImg = document.querySelector('.img-popup__title');\nfunction setImgValue(evt) {\n  urlValueImg.src = evt.target.src;\n  urlValueImg.alt = evt.target.alt;\n  textValueImg.textContent = evt.target.alt;\n}\n\n;// CONCATENATED MODULE: ./src/components/modal.js\n// функция открытия и закрытия попапа на профиле\nfunction openPopup(popup) {\n  document.addEventListener('keydown', closePopupByEsc);\n  popup.classList.add('popup_opened');\n}\nfunction closePopup(popup) {\n  document.addEventListener('keydown', closePopupByEsc);\n  popup.classList.remove('popup_opened');\n}\n\n//функция закрытия окна при клику по оверлею\nfunction closePopupByClickOnOverlay() {\n  document.addEventListener('click', function (evt) {\n    closePopup(evt.target);\n  });\n}\nvar closePopupByEsc = function closePopupByEsc(evt) {\n  if (evt.key === 'Escape') {\n    var popup = document.querySelector('.popup_opened');\n    closePopup(popup);\n  }\n};\nclosePopupByClickOnOverlay();\n\n;// CONCATENATED MODULE: ./src/components/api.js\n// return fetch('https://nomoreparties.co/v1/plus-cohort-25/cards', {\n//     headers: {\n//         authorization: '35842094-b102-48a4-b183-719cf536cb76'\n//     }\n// })\n//     .then(res => res.json())\n//     .then((result) => {\n//     console.log(result);\n// });\n\nvar config = {\n  baseUrl: 'https://nomoreparties.co/v1/plus-cohort-25',\n  headers: {\n    authorization: '35842094-b102-48a4-b183-719cf536cb76',\n    \"Content-Type\": 'application/json'\n  }\n};\nfunction onResponse(res) {\n  return res.ok ? res.json() : res.json().then(function (data) {\n    return Promise.reject(data);\n  });\n}\nfunction getAllCards() {\n  return fetch(\"\".concat(config.baseUrl, \"/cards\"), {\n    method: 'GET',\n    headers: config.headers\n  }).then(onResponse);\n}\n\n//getAllCards();\nfunction getProfileInfo() {\n  return fetch(\"\".concat(config.baseUrl, \"/users/me\"), {\n    method: 'GET',\n    headers: config.headers\n  }).then(onResponse);\n}\nfunction addCard(body) {\n  return fetch(\"\".concat(config.baseUrl, \"/cards\"), {\n    'content-type': 'application/json',\n    method: 'POST',\n    headers: config.headers,\n    body: JSON.stringify(body)\n  }).then(onResponse);\n}\nfunction editProfile(body) {\n  return fetch(\"\".concat(config.baseUrl, \"/users/me\"), {\n    'content-type': 'application/json',\n    method: 'PATCH',\n    headers: config.headers,\n    body: JSON.stringify(body)\n  }).then(onResponse);\n}\nfunction deleteCard(cardId) {\n  return fetch(\"\".concat(config.baseUrl, \"/cards/\").concat(cardId), {\n    method: 'DELETE',\n    headers: config.headers\n  }).then(onResponse);\n}\n\n// // Не забывайте проверять, всё ли в порядке с ответом. Для этого можно использовать res.ok или res.status:\n// export const getInitialCards = () => {\n//     return fetch(`${config.baseUrl}/cards`, {\n//         headers: config.headers\n//     })\n//         .then(res => {\n//             if (res.ok) {\n//                 return res.json();\n//             }\n//         return Promise.reject(`Ошибка: ${res.status}`);\n//         });\n// }\n\n// // Используйте свойства name, about и avatar в соответствующих элементах шапки страницы. Свойство _id — идентификатор пользователя, в данном случае вашего.\n\n// export const getUserInfo = () => {\n//     return fetch(`${config.baseUrl}/users/me`, {\n//         headers: config.headers,\n//         method: 'GET'\n//     })\n//         .then(res => {\n//             if (res.ok) {\n//                 return res.json();\n//             }\n//         return Promise.reject(`Ошибка: ${res.status}`);\n//     });\n// }\n\n//У каждой карточки есть свойства name и link — это заголовок и ссылка на картинку — они понадобятся при отображении каждой отдельной карточки.\n;// CONCATENATED MODULE: ./src/components/cards.js\n\n\n\n\n\n// функция вставляет разметку карточек в DOM\nfunction renderCards() {\n  getAllCards().then(function (allCards) {\n    allCards.forEach(function (card) {\n      containerCards.append(createCard(card));\n    });\n  });\n}\n\n// urlInput.value, nameInput.value\n// функция добавления новой карточки\nfunction addCardSubmit(evt) {\n  evt.preventDefault(); //отменяет стандартную отравку формы\n  var newCardData = {\n    name: inputNameFormAddCard.value,\n    link: inputUrlFormAddCard.value\n  };\n  addCard(newCardData).then(function (dataCard) {\n    containerCards.prepend(createCard(dataCard));\n  });\n  closePopup(popupCardAddForm);\n}\n\n// функция получает данные для создания карточки и возвращает готовую разметку\nfunction createCard(cardData) {\n  var nameCard = cardData.name;\n  var urlCard = cardData.link;\n  var cardTemplate = document.querySelector('#card').content;\n  var cardElement = cardTemplate.querySelector('.elements__item').cloneNode(true);\n  var buttonCardDelete = cardElement.querySelector('.elements__button-delete');\n  var buttonOpenImg = cardElement.querySelector('.elements__image');\n  buttonCardDelete.addEventListener('click', function () {\n    return handleClickDelete(cardData, cardElement);\n  });\n  buttonOpenImg.src = urlCard;\n  buttonOpenImg.alt = nameCard;\n  cardElement.querySelector('.elements__title').textContent = nameCard;\n  cardElement.querySelector('.elements__button-like').addEventListener('click', makeLikeInCard);\n  buttonOpenImg.addEventListener('click', openPopupImgFullSize);\n  return cardElement;\n}\n\n// функция удаления карточки\nfunction deleteCardButton(evt) {\n  evt.target.closest('li').remove();\n}\nvar openPopupImgFullSize = function openPopupImgFullSize(evt) {\n  setImgValue(evt);\n  openPopup(popupCardImgFullSize);\n};\nvar makeLikeInCard = function makeLikeInCard(evt) {\n  evt.target.classList.toggle('elements__button-like_active');\n};\n\n;// CONCATENATED MODULE: ./src/index.js\n // добавьте импорт главного файла стилей\n\n\n\n\n\nvar settings = {\n  formSelector: '.add-popup__form',\n  inputSelector: '.add-popup__text-input',\n  submitButtonSelector: '.add-popup__submit',\n  inactiveButtonClass: 'add-popup__submit_inactive',\n  inputErrorClass: 'add-popup__text-input_type_error',\n  errorClass: 'add-popup__input-error_active'\n};\nvar popupProfileEditForm = document.querySelector('.profile-popup');\nvar src_popupCardAddForm = document.querySelector('.add-popup');\nvar buttonOpenProfileEditForm = document.querySelector('.profile__edit-button');\nvar buttonCloseProfileEditForm = document.querySelector('.popup__closed-button');\nvar buttonOpenCardAddForm = document.querySelector('.profile__add-button');\nvar buttonCloseCardAddForm = document.querySelector('.add-popup__closed-button');\nvar formProfileEdit = document.querySelector('#form-edit-profile');\nvar formCardAdd = document.querySelector('#form-add-card'); //\n\nvar buttonCloseImgPopup = document.querySelector('.img-popup__closed-button');\nvar src_popupCardImgFullSize = document.querySelector('.img-popup');\nvar submitButton = document.querySelector('.add-popup__submit');\n\n// Находим поля формы в DOM\nvar inputNameFormProfile = document.querySelector('#form-edit-profile input[name=\"name\"]');\nvar inputJobFormProfile = document.querySelector('#form-edit-profile input[name=\"activity\"]');\nvar newNameFormProfile = document.querySelector('.profile__name');\nvar newActivityFormProfile = document.querySelector('.profile__activity');\nvar newAvatarFormProfile = document.querySelector('.profile__avatar');\n\n// Находим форму в DOM\n\nfunction handleProfileEditFormSubmit(evt) {\n  evt.preventDefault(); // Эта строчка отменяет стандартную отправку формы.\n  // Получите значение полей jobInput и nameInput из свойства value\n  // Выберите элементы, куда должны быть вставлены значения полей\n  // Вставьте новые значения с помощью textContent\n  editProfile({\n    name: inputNameFormProfile.value,\n    about: inputJobFormProfile.value\n  }).then(function (updateProfile) {\n    newNameFormProfile.textContent = updateProfile.name;\n    newActivityFormProfile.textContent = updateProfile.about;\n  });\n  closePopup(popupProfileEditForm);\n}\nconsole.log(getProfileInfo());\nfunction setProfileInputValue() {\n  getProfileInfo().then(function (data) {\n    newNameFormProfile.textContent = data.name;\n    newActivityFormProfile.textContent = data.about;\n    newAvatarFormProfile.src = data.src;\n    inputNameFormProfile.value = data.name;\n    inputJobFormProfile.value = data.about;\n  });\n}\nsetProfileInputValue();\nfunction makeProfileEditForm() {\n  openPopup(popupProfileEditForm);\n  setProfileInputValue();\n}\nvar handleClickDelete = function handleClickDelete(cardData, cardElement) {\n  deleteCard(cardData._id).then(function () {\n    cardElement.remove();\n    //deleteCardButton\n  });\n};\n\nvalidate_enableValidation(settings);\nrenderCards();\nbuttonOpenProfileEditForm.addEventListener('click', function () {\n  makeProfileEditForm();\n  clearErrors(formProfileEdit, settings);\n});\nbuttonCloseProfileEditForm.addEventListener('click', function () {\n  closePopup(popupProfileEditForm);\n});\nbuttonOpenCardAddForm.addEventListener('click', function () {\n  openPopup(src_popupCardAddForm);\n  formCardAdd.reset();\n  makeButtonDisabled(submitButton, settings);\n  clearErrors(formCardAdd, settings);\n});\nbuttonCloseCardAddForm.addEventListener('click', function () {\n  closePopup(src_popupCardAddForm);\n});\n\n// Обработчик «отправки» формы, хотя пока\n// она никуда отправляться не будет\nformProfileEdit.addEventListener('submit', handleProfileEditFormSubmit);\nbuttonCloseImgPopup.addEventListener('click', function () {\n  closePopup(src_popupCardImgFullSize);\n});\nformCardAdd.addEventListener('submit', addCardSubmit); //обработчик сабмита добавления карточки\n\n/* harmony default export */ const src = ((/* unused pure expression or super */ null && (enableValidation)));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///146\n")}},__webpack_require__={d:(Q,F)=>{for(var U in F)__webpack_require__.o(F,U)&&!__webpack_require__.o(Q,U)&&Object.defineProperty(Q,U,{enumerable:!0,get:F[U]})},o:(Q,F)=>Object.prototype.hasOwnProperty.call(Q,F)},__webpack_exports__={};__webpack_modules__[146](0,__webpack_exports__,__webpack_require__)})();