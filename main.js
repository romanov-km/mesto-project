(()=>{"use strict";var __webpack_modules__={146:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  h$: () => (/* binding */ handleClickDelete),\n  hn: () => (/* binding */ setStatusButton),\n  xS: () => (/* binding */ userId)\n});\n\n// UNUSED EXPORTS: default\n\n;// CONCATENATED MODULE: ./src/components/validate.js\nvar showInputError = function showInputError(formElement, inputElement, errorMessage, settings) {\n  var errorElement = formElement.querySelector(\".\".concat(inputElement.id, \"-error\"));\n  inputElement.classList.add(settings.inputErrorClass);\n  errorElement.textContent = errorMessage;\n  errorElement.classList.add(settings.errorClass);\n};\nvar hideInputError = function hideInputError(formElement, inputElement, settings) {\n  var errorElement = formElement.querySelector(\".\".concat(inputElement.id, \"-error\"));\n  inputElement.classList.remove(settings.inputErrorClass);\n  errorElement.classList.remove(settings.errorClass);\n  errorElement.textContent = '';\n};\nvar isValid = function isValid(formElement, inputElement, settings) {\n  if (inputElement.validity.patternMismatch) {\n    // встроенный метод setCustomValidity принимает на вход строку\n    // и заменяет ею стандартное сообщение об ошибке\n    inputElement.setCustomValidity(inputElement.dataset.errorMessage);\n  } else {\n    // если передать пустую строку, то будут доступны\n    // стандартные браузерные сообщения\n    inputElement.setCustomValidity('');\n  }\n  if (!inputElement.validity.valid) {\n    // третьим аргументом мы передаём сообщение об ошибке,\n    // которое получаем из validationMessage\n    // теперь, если ошибка вызвана регулярным выражением,\n    // переменная validationMessage хранит наше кастомное сообщение\n    showInputError(formElement, inputElement, inputElement.validationMessage, settings);\n  } else {\n    hideInputError(formElement, inputElement, settings);\n  }\n};\nvar setEventListeners = function setEventListeners(formElement, settings) {\n  // Находим все поля внутри формы,\n  // сделаем из них массив методом Array.from\n  var inputList = Array.from(formElement.querySelectorAll(settings.inputSelector));\n  // найдем кнопочку\n  var buttonElement = formElement.querySelector(settings.submitButtonSelector);\n  toggleButtonState(inputList, buttonElement, settings);\n  // Обойдём все элементы полученной коллекции\n  inputList.forEach(function (inputElement) {\n    // каждому полю добавим обработчик события input\n    inputElement.addEventListener('input', function () {\n      // Внутри колбэка вызовем isValid,\n      // передав ей форму и проверяемый элемент\n      isValid(formElement, inputElement, settings);\n      toggleButtonState(inputList, buttonElement, settings);\n    });\n  });\n};\nvar validate_enableValidation = function enableValidation(settings) {\n  // Найдём все формы с указанным классом в DOM,\n  // сделаем из них массив методом Array.from\n  var formList = Array.from(document.querySelectorAll(settings.formSelector));\n  // Переберём полученную коллекцию\n  formList.forEach(function (formElement) {\n    formElement.addEventListener('submit', function (evt) {\n      evt.preventDefault();\n    });\n    // Для каждой формы вызовем функцию setEventListeners,\n    // передав ей элемент формы\n    setEventListeners(formElement, settings);\n  });\n};\nvar hasInvalidInput = function hasInvalidInput(inputList) {\n  return inputList.some(function (inputElement) {\n    return !inputElement.validity.valid;\n  });\n};\n\n//функция активирования кнопки\nvar toggleButtonState = function toggleButtonState(inputList, buttonElement, settings) {\n  if (hasInvalidInput(inputList)) {\n    buttonElement.disabled = true;\n    buttonElement.classList.add(settings.inactiveButtonClass);\n  } else {\n    buttonElement.disabled = false;\n    buttonElement.classList.remove(settings.inactiveButtonClass);\n  }\n};\nvar makeButtonDisabled = function makeButtonDisabled(buttonElement, settings) {\n  buttonElement.disabled = true;\n  buttonElement.classList.add(settings.inactiveButtonClass);\n};\nvar clearErrors = function clearErrors(formElement, settings) {\n  var inputElements = formElement.querySelectorAll(settings.inputSelector); // Выбираем все поля ввода внутри формы\n  // Проверяем каждое поле ввода и стираем ошибки\n  inputElements.forEach(function (inputElement) {\n    hideInputError(formElement, inputElement, settings);\n  });\n};\n\n;// CONCATENATED MODULE: ./src/components/utils.js\n//выбираем контейнер куда будут вставляться карточки\nvar containerCards = document.querySelector('.elements__list');\nvar popupCardImgFullSize = document.querySelector('.img-popup');\nvar inputUrlFormAddCard = document.querySelector('#form-add-card input[name=\"url\"]');\nvar inputNameFormAddCard = document.querySelector('#form-add-card input[name=\"name\"]');\nvar urlValueImg = document.querySelector('.img-popup__image');\nvar textValueImg = document.querySelector('.img-popup__title');\nvar popupProfileEditForm = document.querySelector('.profile-popup');\nvar popupCardAddForm = document.querySelector('.add-popup');\nvar popupAvatarEditForm = document.querySelector('.avatar-popup');\nvar submitButtonCard = popupCardAddForm.querySelector('.add-popup__submit');\nvar submitButtonProfile = popupProfileEditForm.querySelector('.add-popup__submit');\nvar submitButtonAvatar = popupAvatarEditForm.querySelector('.add-popup__submit');\nfunction setImgValue(evt) {\n  urlValueImg.src = evt.target.src;\n  urlValueImg.alt = evt.target.alt;\n  textValueImg.textContent = evt.target.alt;\n}\n\n;// CONCATENATED MODULE: ./src/components/modal.js\n// функция открытия и закрытия попапа на профиле\nfunction openPopup(popup) {\n  document.addEventListener('keydown', closePopupByEsc);\n  popup.classList.add('popup_opened');\n}\nfunction closePopup(popup) {\n  document.addEventListener('keydown', closePopupByEsc);\n  popup.classList.remove('popup_opened');\n}\n\n//функция закрытия окна при клику по оверлею\nfunction closePopupByClickOnOverlay() {\n  document.addEventListener('click', function (evt) {\n    closePopup(evt.target);\n  });\n}\nvar closePopupByEsc = function closePopupByEsc(evt) {\n  if (evt.key === 'Escape') {\n    var popup = document.querySelector('.popup_opened');\n    closePopup(popup);\n  }\n};\nclosePopupByClickOnOverlay();\n\n;// CONCATENATED MODULE: ./src/components/api.js\nvar config = {\n  baseUrl: 'https://nomoreparties.co/v1/plus-cohort-25',\n  headers: {\n    authorization: '35842094-b102-48a4-b183-719cf536cb76',\n    \"Content-Type\": 'application/json'\n  }\n};\nfunction onResponse(res) {\n  return res.ok ? res.json() : res.json().then(function (data) {\n    return Promise.reject(data);\n  });\n}\nfunction getAllCards() {\n  return fetch(\"\".concat(config.baseUrl, \"/cards\"), {\n    method: 'GET',\n    headers: config.headers\n  }).then(onResponse);\n}\nfunction getProfileInfo() {\n  return fetch(\"\".concat(config.baseUrl, \"/users/me\"), {\n    method: 'GET',\n    headers: config.headers\n  }).then(onResponse);\n}\nfunction addCard(body) {\n  return fetch(\"\".concat(config.baseUrl, \"/cards\"), {\n    'content-type': 'application/json',\n    method: 'POST',\n    headers: config.headers,\n    body: JSON.stringify(body)\n  }).then(onResponse);\n}\nfunction editProfile(body) {\n  return fetch(\"\".concat(config.baseUrl, \"/users/me\"), {\n    'content-type': 'application/json',\n    method: 'PATCH',\n    headers: config.headers,\n    body: JSON.stringify(body)\n  }).then(onResponse);\n}\nfunction editAvatar(body) {\n  return fetch(\"\".concat(config.baseUrl, \"/users/me/avatar\"), {\n    'content-type': 'application/json',\n    method: 'PATCH',\n    headers: config.headers,\n    body: JSON.stringify(body)\n  }).then(onResponse);\n}\nfunction deleteCard(cardId) {\n  return fetch(\"\".concat(config.baseUrl, \"/cards/\").concat(cardId), {\n    method: 'DELETE',\n    headers: config.headers\n  }).then(onResponse);\n}\n\n//  лайк\nfunction likeCard(cardId) {\n  return fetch(\"\".concat(config.baseUrl, \"/cards/likes/\").concat(cardId), {\n    method: 'PUT',\n    headers: config.headers\n  }).then(onResponse);\n}\n\n// удаление лайка\nfunction unlikeCard(cardId) {\n  return fetch(\"\".concat(config.baseUrl, \"/cards/likes/\").concat(cardId), {\n    method: 'DELETE',\n    headers: config.headers\n  }).then(onResponse);\n}\n;// CONCATENATED MODULE: ./src/components/cards.js\n\n\n\n\n\n\n// функция вставляет разметку карточек в DOM\n// function renderCards() {\n//     getAllCards()\n//         .then(allCards => {\n//             allCards.forEach((card) => {containerCards.append(createCard(card))})\n//         })\n//         .catch((error) => {console.log(error)});\n// }\n\n// urlInput.value, nameInput.value\n// функция добавления новой карточки\nfunction addCardSubmit(evt) {\n  evt.preventDefault(); //отменяет стандартную отравку формы\n  setStatusButton({\n    buttonElement: submitButtonCard,\n    text: 'Сохранение...',\n    disabled: true\n  });\n  var newCardData = {\n    name: inputNameFormAddCard.value,\n    link: inputUrlFormAddCard.value\n  };\n  addCard(newCardData).then(function (dataCard) {\n    containerCards.prepend(createCard(dataCard));\n    closePopup(popupCardAddForm);\n  }).catch(function (err) {\n    console.log(err);\n  }).finally(function () {\n    setStatusButton({\n      buttonElement: submitButtonCard,\n      text: 'Сохранить',\n      disabled: false\n    });\n  });\n}\n\n// функция получает данные для создания карточки и возвращает готовую разметку\nfunction createCard(cardData) {\n  var nameCard = cardData.name;\n  var urlCard = cardData.link;\n  var cardTemplate = document.querySelector('#card').content;\n  var cardElement = cardTemplate.querySelector('.elements__item').cloneNode(true);\n  var buttonCardDelete = cardElement.querySelector('.elements__button-delete');\n  if (cardData.owner._id !== userId) {\n    buttonCardDelete.remove();\n  }\n  buttonCardDelete.addEventListener('click', function () {\n    return handleClickDelete(cardData, cardElement);\n  });\n  var buttonOpenImg = cardElement.querySelector('.elements__image');\n  buttonOpenImg.src = urlCard;\n  buttonOpenImg.alt = nameCard;\n  cardElement.querySelector('.elements__title').textContent = nameCard;\n\n  //likes \n  var cardLike = cardElement.querySelector('.elements__number-like');\n  cardLike.textContent = cardData.likes.length;\n  var cardButtonLike = cardElement.querySelector('.elements__button-like');\n  if (cardData.likes.find(function (likes) {\n    return likes._id === userId;\n  })) {\n    makeLikeInCard(cardButtonLike);\n  }\n  cardButtonLike.addEventListener('click', function (evt) {\n    if (evt.target.classList.contains('elements__button-like_active')) {\n      unlikeCard(cardData._id).then(function (dataLike) {\n        cardLike.textContent = dataLike.likes.length;\n        makeLikeInCard(cardButtonLike);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    } else {\n      likeCard(cardData._id).then(function (dataLike) {\n        cardLike.textContent = dataLike.likes.length;\n        makeLikeInCard(cardButtonLike);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  });\n  buttonOpenImg.addEventListener('click', openPopupImgFullSize);\n  return cardElement;\n}\nvar openPopupImgFullSize = function openPopupImgFullSize(evt) {\n  setImgValue(evt);\n  openPopup(popupCardImgFullSize);\n};\nvar makeLikeInCard = function makeLikeInCard(target) {\n  target.classList.toggle('elements__button-like_active');\n};\n\n;// CONCATENATED MODULE: ./src/index.js\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i.return && (_r = _i.return(), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n // добавьте импорт главного файла стилей\n\n\n\n\n\nvar userId = 0;\nvar settings = {\n  formSelector: '.add-popup__form',\n  inputSelector: '.add-popup__text-input',\n  submitButtonSelector: '.add-popup__submit',\n  inactiveButtonClass: 'add-popup__submit_inactive',\n  inputErrorClass: 'add-popup__text-input_type_error',\n  errorClass: 'add-popup__input-error_active'\n};\nvar buttonOpenProfileEditForm = document.querySelector('.profile__edit-button');\nvar buttonCloseProfileEditForm = document.querySelector('.popup__closed-button');\nvar buttonOpenCardAddForm = document.querySelector('.profile__add-button');\nvar buttonCloseCardAddForm = document.querySelector('.add-popup__closed-button');\nvar buttonOpenAvatarForm = document.querySelector('.profile__edit-button-avatar');\nvar buttonCloseAvatarEditForm = document.querySelector('.avatar-popup__closed-button');\n\n// Находим форму в DOM\nvar formProfileEdit = document.querySelector('#form-edit-profile');\nvar formCardAdd = document.querySelector('#form-add-card');\nvar formAvatarEdit = document.querySelector('#form-avatar-edit');\nvar buttonCloseImgPopup = document.querySelector('.img-popup__closed-button');\nvar src_popupCardImgFullSize = document.querySelector('.img-popup');\n\n// Находим поля формы в DOM\nvar inputNameFormProfile = document.querySelector('#form-edit-profile input[name=\"name\"]');\nvar inputJobFormProfile = document.querySelector('#form-edit-profile input[name=\"activity\"]');\nvar inputAvatarFormProfile = document.querySelector('#form-avatar-edit input[name=\"url\"]');\nvar newNameFormProfile = document.querySelector('.profile__name');\nvar newActivityFormProfile = document.querySelector('.profile__activity');\nvar newAvatarFormProfile = document.querySelector('.profile__avatar');\nPromise.all([getProfileInfo(), getAllCards()]).then(function (_ref) {\n  var _ref2 = _slicedToArray(_ref, 2),\n    user = _ref2[0],\n    cards = _ref2[1];\n  userId = user._id;\n  newNameFormProfile.textContent = user.name;\n  newActivityFormProfile.textContent = user.about;\n  newAvatarFormProfile.src = user.avatar;\n  inputNameFormProfile.value = user.name;\n  inputJobFormProfile.value = user.about;\n  cards.forEach(function (card) {\n    containerCards.append(createCard(card));\n  });\n}).catch(function (error) {\n  console.log(error);\n});\nfunction setStatusButton(_ref3) {\n  var buttonElement = _ref3.buttonElement,\n    text = _ref3.text,\n    disabled = _ref3.disabled;\n  if (disabled) {\n    buttonElement.disabled = 'disabled';\n  } else {\n    buttonElement.disabled = false;\n  }\n  buttonElement.textContent = text;\n}\nfunction handleProfileEditFormSubmit(evt) {\n  evt.preventDefault(); // Эта строчка отменяет стандартную отправку формы.\n  setStatusButton({\n    buttonElement: submitButtonProfile,\n    text: 'Сохранение...',\n    disabled: true\n  });\n  // Получите значение полей jobInput и nameInput из свойства value\n  // Выберите элементы, куда должны быть вставлены значения полей\n  // Вставьте новые значения с помощью textContent\n  editProfile({\n    name: inputNameFormProfile.value,\n    about: inputJobFormProfile.value\n  }).then(function (updateProfile) {\n    newNameFormProfile.textContent = updateProfile.name;\n    newActivityFormProfile.textContent = updateProfile.about;\n    closePopup(popupProfileEditForm);\n  }).catch(function (error) {\n    console.log(error);\n  }).finally(function () {\n    setStatusButton({\n      buttonElement: submitButtonProfile,\n      text: 'Сохранить',\n      disabled: false\n    });\n  });\n}\nfunction handleAvatarEditFormSubmit(evt) {\n  evt.preventDefault();\n  setStatusButton({\n    buttonElement: submitButtonAvatar,\n    text: 'Сохранение...',\n    disabled: true\n  });\n  editAvatar({\n    avatar: inputAvatarFormProfile.value\n  }).then(function (updateAvatar) {\n    inputAvatarFormProfile.textContent = updateAvatar.src;\n    closePopup(popupAvatarEditForm);\n  }).catch(function (error) {\n    console.log(error);\n  }).finally(function () {\n    setStatusButton({\n      buttonElement: submitButtonAvatar,\n      text: 'Сохранить',\n      disabled: false\n    });\n    newAvatarFormProfile.src = inputAvatarFormProfile.value;\n  });\n}\n\n// function setProfileInputValue() {\n//     getProfileInfo()\n//         .then((data) => {\n//             newNameFormProfile.textContent = data.name;\n//             newActivityFormProfile.textContent = data.about;\n//             newAvatarFormProfile.src = data.avatar;\n//             inputNameFormProfile.value = data.name;\n//             inputJobFormProfile.value = data.about;   \n//         })\n//         .catch((error) => {console.log(error)});\n// }\n\n// setProfileInputValue();\n\nfunction makeProfileEditForm() {\n  openPopup(popupProfileEditForm);\n  //setProfileInputValue();\n}\n\nvar handleClickDelete = function handleClickDelete(cardData, cardElement) {\n  deleteCard(cardData._id).then(function () {\n    cardElement.closest('.elements__item').remove();\n  }).catch(function (error) {\n    console.log(error);\n  });\n};\nvalidate_enableValidation(settings);\n\n// renderCards();\n\nbuttonOpenProfileEditForm.addEventListener('click', function () {\n  makeProfileEditForm();\n  clearErrors(formProfileEdit, settings);\n});\nbuttonCloseProfileEditForm.addEventListener('click', function () {\n  closePopup(popupProfileEditForm);\n});\nbuttonOpenCardAddForm.addEventListener('click', function () {\n  openPopup(popupCardAddForm);\n  formCardAdd.reset();\n  makeButtonDisabled(submitButtonCard, settings);\n  clearErrors(formCardAdd, settings);\n});\nbuttonCloseCardAddForm.addEventListener('click', function () {\n  closePopup(popupCardAddForm);\n});\nbuttonOpenAvatarForm.addEventListener('click', function () {\n  openPopup(popupAvatarEditForm);\n  formAvatarEdit.reset();\n  makeButtonDisabled(submitButtonAvatar, settings);\n  clearErrors(formAvatarEdit, settings);\n});\nbuttonCloseAvatarEditForm.addEventListener('click', function () {\n  closePopup(popupAvatarEditForm);\n});\n\n// Обработчик «отправки» формы, хотя пока\n// она никуда отправляться не будет\nformProfileEdit.addEventListener('submit', handleProfileEditFormSubmit);\nbuttonCloseImgPopup.addEventListener('click', function () {\n  closePopup(src_popupCardImgFullSize);\n});\nformCardAdd.addEventListener('submit', addCardSubmit); //обработчик сабмита добавления карточки\n\nformAvatarEdit.addEventListener('submit', handleAvatarEditFormSubmit);\n/* harmony default export */ const src = ((/* unused pure expression or super */ null && (enableValidation)));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///146\n")}},__webpack_require__={d:(Q,F)=>{for(var U in F)__webpack_require__.o(F,U)&&!__webpack_require__.o(Q,U)&&Object.defineProperty(Q,U,{enumerable:!0,get:F[U]})},o:(Q,F)=>Object.prototype.hasOwnProperty.call(Q,F)},__webpack_exports__={};__webpack_modules__[146](0,__webpack_exports__,__webpack_require__)})();